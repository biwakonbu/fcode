#!/bin/bash

# F# pre-commit hook: フォーマット・リント・テスト・ビルドの実行

set -e

# pre-commit が実行されたことを示す環境変数を設定
export PRE_COMMIT_EXECUTED=1

echo "🔍 Pre-commit checks starting..."

# カラー出力用の定数
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# エラー時の処理
handle_error() {
    echo -e "${RED}❌ Pre-commit check failed: $1${NC}"
    exit 1
}

# 成功時の処理
print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_info() {
    echo -e "${BLUE}ℹ️  $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

# 1. フォーマットチェック
print_info "Checking F# code formatting..."
if command -v fantomas &> /dev/null; then
    if fantomas --check src/ tests/ &> /dev/null; then
        print_success "Code formatting is correct"
    else
        print_warning "Code formatting issues detected. Auto-fixing..."
        fantomas src/ tests/
        if [ $? -eq 0 ]; then
            print_success "Code automatically formatted"
            echo -e "${YELLOW}📝 Files have been auto-formatted. Please review and re-commit.${NC}"
            exit 1
        else
            handle_error "Failed to format code"
        fi
    fi
else
    print_warning "Fantomas not found. Installing..."
    dotnet tool install -g fantomas
    if [ $? -ne 0 ]; then
        handle_error "Failed to install Fantomas"
    fi
    # Rerun formatting check
    if fantomas --check src/ tests/ &> /dev/null; then
        print_success "Code formatting is correct"
    else
        print_warning "Code formatting issues detected. Auto-fixing..."
        fantomas src/ tests/
        print_success "Code automatically formatted"
        echo -e "${YELLOW}📝 Files have been auto-formatted. Please review and re-commit.${NC}"
        exit 1
    fi
fi

# 2. リント (警告をエラーとして扱う)
print_info "Running F# linting..."
if dotnet build src/fcode.fsproj --configuration Debug --verbosity quiet --property TreatWarningsAsErrors=true > /dev/null 2>&1; then
    print_success "Main project linting passed"
else
    handle_error "Main project linting failed"
fi

if dotnet build tests/fcode.Tests.fsproj --configuration Debug --verbosity quiet --property TreatWarningsAsErrors=true > /dev/null 2>&1; then
    print_success "Test project linting passed"
else
    handle_error "Test project linting failed"
fi

# 3. テスト実行
print_info "Running tests..."
if dotnet test tests/fcode.Tests.fsproj --configuration Debug --verbosity quiet --nologo > /dev/null 2>&1; then
    print_success "All tests passed"
else
    handle_error "Tests failed"
fi

# 4. リリースビルドチェック
print_info "Checking release build..."
if dotnet build src/fcode.fsproj --configuration Release --verbosity quiet > /dev/null 2>&1; then
    print_success "Release build successful"
else
    handle_error "Release build failed"
fi

echo -e "${GREEN}🎉 All pre-commit checks passed!${NC}"
echo ""