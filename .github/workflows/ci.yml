name: CI

on:
  pull_request:
    branches: [ main, develop ]

jobs:
  format-lint-test-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    # 1. フォーマットチェック
    - name: Check F# formatting
      run: |
        dotnet tool install -g fantomas
        fantomas --check src/ tests/
    
    # 2. リント (FSharpLint + F# Analyzer + 警告チェック)
    - name: Install FSharpLint
      run: dotnet tool install -g dotnet-fsharplint
    
    - name: Restore dependencies for linting
      run: |
        dotnet restore src/fcode.fsproj
        dotnet restore tests/fcode.Tests.fsproj
    
    - name: Run FSharpLint
      run: |
        dotnet fsharplint lint src/fcode.fsproj --lint-config .fsharplint.json
        dotnet fsharplint lint tests/fcode.Tests.fsproj --lint-config .fsharplint.json
    
    - name: Run F# linting
      run: |
        dotnet build src/fcode.fsproj --configuration Debug --verbosity normal --property TreatWarningsAsErrors=true
    
    # 3. テスト実行 (5分タイムアウト)
    - name: Run tests
      run: dotnet test tests/fcode.Tests.fsproj --configuration Debug --verbosity normal --logger trx --results-directory TestResults --filter "TestCategory=Unit" --blame-hang-timeout 60000ms
      env:
        TERM: xterm
        CI: true
    
    # - name: Upload test results
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: test-results
    #     path: TestResults/
    
    # 4. リリースビルド
    - name: Build release
      run: |
        dotnet build src/fcode.fsproj --configuration Release --verbosity normal
    
    # Linux向け単一ファイルパブリッシュ
    - name: Publish Linux x64
      run: dotnet publish src/fcode.fsproj -c Release -r linux-x64 --self-contained true -p:PublishSingleFile=true -o publish/linux-x64
    
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: fcode-linux-x64
        path: publish/linux-x64/fcode

  build-macos:
    runs-on: macos-latest
    needs: format-lint-test-build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: |
        dotnet restore src/fcode.fsproj
    
    - name: Run tests on macOS
      run: dotnet test tests/fcode.Tests.fsproj --configuration Debug --verbosity normal --logger trx --results-directory TestResults --filter "TestCategory=Unit" --blame-hang-timeout 60000ms
      env:
        TERM: xterm
        CI: true
    
    # - name: Upload macOS test results
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: macos-test-results
    #     path: TestResults/
    
    # macOS向け単一ファイルパブリッシュ
    - name: Publish macOS x64
      run: dotnet publish src/fcode.fsproj -c Release -r osx-x64 --self-contained true -p:PublishSingleFile=true -o publish/osx-x64
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: fcode-macos-x64
        path: publish/osx-x64/fcode